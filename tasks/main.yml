---

  - name: Set Image version
    set_fact:
      local_image_path: "/tmp/"
      local_image_filename: "nxos.7.0.3.I7.2.bin"

  - name: Get Facts
    nxos_facts:
      provider: "{{ nxos_cli }}"
    register: system_facts

  - name: collect output from nxos device
    nxos_command:
      commands:
        - show version
      provider: "{{ nxos_cli }}"
    register: output


  - name: set facts
    set_fact:
      running_hostname: "{{ output.stdout[0] | regex_findall('\\s+Device name:\\s+(\\S+)') | first }}"

  - name: set facts
    set_fact:
      running_serial: "{{ output.stdout[0] | regex_findall('\\s+Processor Board ID\\s+(\\S+)') | first }}"

  - name: set facts
    set_fact:
      running_image_filename: "{{ ansible_net_image | regex_findall('bootflash:/{1,3}(\\S+)') | first }}"

  - assert:
      that:
        - running_serial  == "{{ SerialNo }}"
      msg: "Device Serial Number doesnt Match!  Running: {{ running_serial }} Configured: {{ SerialNo }}"

  - assert:
       that:
         - running_hostname == "{{ hostname }}"
       msg: "Device hostname doesnt Match config! Running: {{ running_hostname }} Configured: {{ hostname }}"

  - debug:
      msg:
        - "Running: {{ running_serial }}"
        - "Configured: {{ SerialNo }}"
        - "Running Hostname: {{ running_hostname }}"
        - "Configured Hostname: {{ hostname }}"
        - "Currently Running: {{ running_image_filename }}"

  - assert:
       that:
         - running_image_filename !=  local_image_filename
       msg: "Device {{ running_hostname }} already running: {{ running_image_filename }}"

  - name: Proceed with Upgrade?
    pause: prompt='Please confirm you want to push upgrade! Press return to continue. Press Ctrl+c and then "a" to abort'

  - name: enable scp-server
    nxos_feature:
      feature: scp-server
      state: enabled
      provider: "{{ nxos_cli }}"

  - name: Copy Image to the Switch
    nxos_file_copy:
      local_file: "/tmp/nxos.7.0.3.I7.2.bin"
      #timeout: 300
      provider: "{{ nxos_cli }}"

  - block:
    - name: Install OS
      nxos_install_os:
        system_image_file: nxos.7.0.3.I7.2.bin
        provider: "{{ nxos_cli }}"

    rescue:
      - name: Wait for device to perform all checks
        wait_for:
          port: 22
          state: stopped
          timeout: 400
          delay: 60
          host: "{{ inventory_hostname }}"

      - name: Wait for device to come back up
        wait_for:
          port: 22
          state: started
          timeout: 400
          delay: 60
          host: "{{ inventory_hostname }}"

      - name: Check installed OS
        nxos_command:
          commands:
            - show version
          provider: "{{ nxos_provider }}"
        register: output
      - assert:
          that:
            - output['stdout'][0]['ansible_net_image'] == '7.0(3)I7(2)'